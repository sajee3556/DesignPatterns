
    1.Static methods, variables, and initialization code have these characteristics.

    They’re associated with a class.
    They’re allowed only in outer classes.
    They’re initialized only when a class is loaded.
    They aren’t transmitted as part of the view state for a Visualforce page.

    2.Instance methods, member variables, and initialization code have these characteristics.

    They’re associated with a particular object.
    They have no definition modifier.
    They’re created with every object instantiated from the class in which they’re declared.

    3.Local variables have these characteristics.

    They’re associated with the block of code in which they’re declared.
    They must be initialized before they’re used.

    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

***********************************************************************************************************************
public void MyMethod(string myParam) { }
string myArg1 = "this is my argument";
myClass.MyMethod(myArg1);

        Arguments are Actual. "Parameter is a variable in a method definition"
        but it might be better to say "method declaration".
>>>>>>   "You define parameters, and you make arguments."  <<<<<<<<<

Comparing composition and inheritance:
    composition over inheritance -> change interface easily

    ******************************************************************************************************************